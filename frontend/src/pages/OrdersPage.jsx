// OrdersPage.jsx
import React, { useState, useEffect } from "react";
import CalculationList from "../components/Order/CalculationList";
import { mockCalculations } from "../components/Order/mockCalculations";
import FilterMenu from "../components/Order/FilterMenu"; // üëà —ñ–º–ø–æ—Ä—Ç –º–µ–Ω—é

const OrdersPage = () => {
  const [allCalculations, setAllCalculations] = useState([]);
  const [searchQuery, setSearchQuery] = useState("");
  const [activeFilter, setActiveFilter] = useState("all");

  useEffect(() => {
    setAllCalculations(mockCalculations);
  }, []);

  const filteredCalculations = allCalculations
    .map((calc) => {
      const filteredOrders = calc.items.filter((order) => {
        let statusMatch = true;
        switch (activeFilter) {
          case "new": statusMatch = order['–≠—Ç–∞–ø–í—ã–ø–æ–ª–Ω–µ–Ω–∏—è–ó–∞–∫–∞–∑–∞'] === "–ù–æ–≤–∏–π"; break;
          case "processing": statusMatch = order['–≠—Ç–∞–ø–í—ã–ø–æ–ª–Ω–µ–Ω–∏—è–ó–∞–∫–∞–∑–∞'] === "–í –æ–±—Ä–æ–±—Ü—ñ"; break;
          case "waiting-payment": statusMatch = parseFloat(order['–°—É–º–º–∞–ó–∞–∫–∞–∑–∞']) - parseFloat(order['–û–ø–ª–∞—á–µ–Ω–æ–ü–æ–ó–∞–∫–∞–∑—É']) > 0; break;
          case "waiting-confirm": statusMatch = order['–°–æ—Å—Ç–æ—è–Ω–∏–µ–ó–∞–∫–∞–∑–∞'] !== "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ"; break;
          case "production": statusMatch = !!order['–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è–î–∞—Ç–∞–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞–ú–∞–∫—Å']; break;
          case "ready": statusMatch = !!order['–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è–î–∞—Ç–∞–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏–ú–∞–∫—Å']; break;
          case "delivered": statusMatch = !!order['–î–∞—Ç–∞–†–µ–∞–ª–∏–∑–∞—Ü–∏–∏']; break;
          case "rejected": statusMatch = order['–≠—Ç–∞–ø–í—ã–ø–æ–ª–Ω–µ–Ω–∏—è–ó–∞–∫–∞–∑–∞'] === "–í—ñ–¥–º–æ–≤–∞"; break;
          default: statusMatch = true;
        }

        const searchMatch = order.name.toLowerCase().includes(searchQuery.toLowerCase());
        return statusMatch && searchMatch;
      });

      return { ...calc, items: filteredOrders };
    })
    .filter((calc) => calc.items.length > 0);

  return (
    <div className="orders-page row gap-20 w-100" style={{ height: "100vh" , padding: "1% 10% 0 10%" }}>
      {/* –ë–æ–∫–æ–≤–µ –º–µ–Ω—é */}
      <div className="sidebar">
        <FilterMenu
        calculations={allCalculations}   // üëà –ø–µ—Ä–µ–¥–∞—î–º–æ –≤—Å—ñ –¥–∞–Ω—ñ
        onSelect={(filterId, searchValue) => {
          setActiveFilter(filterId);
          setSearchQuery(searchValue);
        }}
      />

      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="calculations-wrapper column gap-14 w-100" style={{ height: "100%" }}>
          <h1>–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ä–∞—Ö—É–Ω–∫—ñ–≤ —Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å</h1>
          {/* –¢—É—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑ –ø—Ä–æ–∫—Ä—É—Ç–∫–æ—é */}
          <div style={{ flex: 1, overflowY: "auto" }}>
            <CalculationList calculations={filteredCalculations} />
          </div>
        </div>
      </div>
  );
};

export default OrdersPage;
